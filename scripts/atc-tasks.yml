apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-bandwidth
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "bandwidth" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "bandwidth.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-connections
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "ats.proxy.process.http.current_client_connections" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "connections.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cdn-bandwidth
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/monthly")
      |> range(start: -5m)
      |> filter(fn: (r) => r._measurement == "bandwidth.1min" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: sum, createEmpty: false)
      |> set(key: "_measurement", value: "bandwidth.cdn.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cdn-connections
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/monthly")
      |> range(start: -5m)
      |> filter(fn: (r) => r._measurement == "connections.1min" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: sum, createEmpty: false)
      |> set(key: "_measurement", value: "connections.cdn.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cdn-bandwidth-type
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/monthly")
      |> range(start: -5m)
      |> filter(fn: (r) => r._measurement == "bandwidth.1min" and r._field == "value")
      |> group(columns: ["cdn", "type"])
      |> aggregateWindow(every: 1m, fn: sum, createEmpty: false)
      |> set(key: "_measurement", value: "bandwidth.cdn.type.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cdn-connections-type
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/monthly")
      |> range(start: -5m)
      |> filter(fn: (r) => r._measurement == "connections.1min" and r._field == "value")
      |> group(columns: ["cdn", "type"])
      |> aggregateWindow(every: 1m, fn: sum, createEmpty: false)
      |> set(key: "_measurement", value: "connections.cdn.type.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-max-kbps
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "maxKbps" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "maxkbps.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cdn-max-kbps
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/monthly")
      |> range(start: -5m)
      |> filter(fn: (r) => r._measurement == "maxkbps.1min" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: sum, createEmpty: false)
      |> set(key: "_measurement", value: "maxkbps.cdn.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-wrap-count-vol1
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "ats.proxy.process.cache.volume_1.wrap_count" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> map(fn: (r) => ({ r with _field: "vol1_wrap_count" }))
      |> set(key: "_measurement", value: "wrap_count.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-wrap-count-vol2
spec:
  every: 1m
  query: |
    
    from(bucket: "cache_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "ats.proxy.process.cache.volume_2.wrap_count" and r._field == "value")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> map(fn: (r) => ({ r with _field: "vol2_wrap_count" }))
      |> set(key: "_measurement", value: "wrap_count.1min")
      |> to(bucket: "cache_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-2xx-tps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "tps_2xx" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "tps_2xx.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-3xx-tps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "tps_3xx" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "tps_3xx.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-4xx-tps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "tps_4xx" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "tps_4xx.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-5xx-tps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "tps_5xx" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "tps_5xx.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-total-tps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "tps_total" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "tps_total.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-kbps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "kbps" and r._field == "value" and r.cachegroup == "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "kbps.ds.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-cachegroup-kbps
spec:
  every: 1m
  query: |
    
    from(bucket: "deliveryservice_stats/daily")
      |> range(start: -2m)
      |> filter(fn: (r) => r._measurement == "kbps" and r._field == "value" and r.cachegroup != "total")
      |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)
      |> set(key: "_measurement", value: "kbps.cg.1min")
      |> to(bucket: "deliveryservice_stats/monthly")

---

apiVersion: influxdata.com/v2alpha1
kind: Task
metadata:
  name: aggregate-ds-max-kbps
spec:
  every: 1d
  query: |
    
    from(bucket: "deliveryservice_stats/monthly")
      |> range(start: -2d)
      |> filter(fn: (r) => r._measurement == "kbps.ds.1min" and r._field == "value")
      |> group(columns: ["deliveryservice", "cdn"])
      |> aggregateWindow(every: 1d, fn: max, createEmpty: false)
      |> set(key: "_measurement", value: "max.kbps.ds.1day")
      |> to(bucket: "deliveryservice_stats/indefinite")
